function Get-ADPasswordResetBulk

{

$newPassword = ConvertTo-SecureString -AsPlainText "Password" -Force

# Password change to the new password specified.

$csvDir = Read-Host -Prompt "Please enter the directory where the .csv file is"

Import-Csv "$csvDir" | ForEach-Object {

# Import from .csv file

$samAccountName = $_."samAccountName"

# Confirmation on the change, Y/N to confirm, so no mistakes or accidents happen.

$title    = 'Bulk Password Reset Confirmation'
 $question = 'Are you sure you want to proceed with the password reset? Double check information'
 $choices  = '&Yes', '&No'
$decision = $Host.UI.PromptForChoice($title, $question, $choices, 1)
if ($decision -eq 0) {
     Write-Host 'Confirmed'
} else {
    Write-Host 'Cancelled'

# Un-comment the below line if your CSV file includes password for all users

# $newPassword = ConvertTo-SecureString -AsPlainText $_."Password"Â  -Force <--- This line mentioned ^^ above

Set-ADAccountPassword -Identity $samAccountName -NewPassword $newPassword -Reset

# Calls on the new password listed above.

Set-AdUser -Identity $samAccountName -ChangePasswordAtLogon $true

# Forces user to change password at next login.

Write-Host " AD Password has been reset for: "$samAccountName

# Writes to PS window stating the changes took affect.

            }
        }
    }
